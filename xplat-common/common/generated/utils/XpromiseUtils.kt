// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM utils/xpromise-utils.ts >>>

package com.yandex.xplat.common


public fun <T> executeSequentially(promiseFactories: YSArray<() -> XPromise<T>>): XPromise<YSArray<T>> {
    var chain: XPromise<YSArray<T>> = resolve<YSArray<T>>(mutableListOf())
    promiseFactories.forEach(__LBL__XpromiseUtils_1@ {
        promiseFactory: () -> XPromise<T> ->
        chain = chain.flatThen( {
            accumulator: YSArray<T> ->
            promiseFactory().then(__LBL__XpromiseUtils_2@ {
                value: T ->
                accumulator.add(value)
                return@__LBL__XpromiseUtils_2 accumulator
            })
        })
    })
    return chain
}

