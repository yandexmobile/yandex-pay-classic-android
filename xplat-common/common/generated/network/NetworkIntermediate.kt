// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM network/network-intermediate.ts >>>

package com.yandex.xplat.common


public interface NetworkInterceptor {
    fun intercept(originalRequest: NetworkRequest): XPromise<NetworkRequest>
}

public open class NetworkIntermediate(private val `delegate`: Network, private val interceptors: YSArray<NetworkInterceptor>): Network {
    open override fun execute(request: NetworkRequest): XPromise<JSONItem> {
        return this.updateRequest(request).flatThen( {
            updatedRequest ->
            this.`delegate`.execute(updatedRequest)
        })
    }

    open override fun executeRaw(request: NetworkRequest): XPromise<NetworkResponse> {
        return this.updateRequest(request).flatThen( {
            updatedRequest ->
            this.`delegate`.executeRaw(updatedRequest)
        })
    }

    open override fun resolveURL(request: NetworkRequest): String? {
        return this.`delegate`.resolveURL(request)
    }

    private fun updateRequest(originalRequest: NetworkRequest): XPromise<NetworkRequest> {
        return this.interceptors.reduce(__LBL__NetworkIntermediate_1@ {
            res: XPromise<NetworkRequest>, interceptor: NetworkInterceptor ->
            return@__LBL__NetworkIntermediate_1 res.flatThen( {
                request: NetworkRequest ->
                interceptor.intercept(request)
            })
        }
, resolve(originalRequest))
    }

}

