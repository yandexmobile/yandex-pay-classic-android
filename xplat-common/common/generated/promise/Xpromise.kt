// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM promise/xpromise.ts >>>

package com.yandex.xplat.common


public abstract class XPromise<T> {
    abstract fun <R> both(onResolved: (T) -> R, onRejected: (YSError) -> R): XPromise<R>
    abstract fun <R> flatBoth(onResolved: (T) -> XPromise<R>, onRejected: (YSError) -> XPromise<R>): XPromise<R>
    abstract fun <R> then(onResolved: (T) -> R): XPromise<R>
    abstract fun <R> flatThen(onResolved: (T) -> XPromise<R>): XPromise<R>
    abstract fun `catch`(onRejected: (YSError) -> T): XPromise<T>
    abstract fun flatCatch(onRejected: (YSError) -> XPromise<T>): XPromise<T>
    abstract fun failed(onRejected: (YSError) -> Unit): Unit
    abstract fun `finally`(onFinally: () -> Unit): XPromise<T>
}

