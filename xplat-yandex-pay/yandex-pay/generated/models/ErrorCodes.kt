// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM models/error-codes.ts >>>

package com.yandex.xplat.yandex.pay

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*

public enum class ErrorCodes {
    amountLimitExceeded,
    amountMismatch,
    cardNetworkNotSupported,
    cardNotFound,
    codeCheckFailed,
    gatewayNotFound,
    insecureMerchantOrigin,
    invalidAmount,
    invalidCountry,
    invalidCurrency,
    invalidVersion,
    merchantNotFound,
    merchantOriginError,
}
public fun errorCodeFromString(value: String): ErrorCodes? {
    when (value.toUpperCase()) {
        "AMOUNT_LIMIT_EXCEEDED" -> {
            return ErrorCodes.amountLimitExceeded
        }
        "AMOUNT_MISMATCH" -> {
            return ErrorCodes.amountMismatch
        }
        "CARD_NETWORK_NOT_SUPPORTED" -> {
            return ErrorCodes.cardNetworkNotSupported
        }
        "CARD_NOT_FOUND" -> {
            return ErrorCodes.cardNotFound
        }
        "CODE_CHECK_FAILED" -> {
            return ErrorCodes.codeCheckFailed
        }
        "GATEWAY_NOT_FOUND" -> {
            return ErrorCodes.gatewayNotFound
        }
        "INSECURE_MERCHANT_ORIGIN" -> {
            return ErrorCodes.insecureMerchantOrigin
        }
        "INVALID_AMOUNT" -> {
            return ErrorCodes.invalidAmount
        }
        "INVALID_COUNTRY" -> {
            return ErrorCodes.invalidCountry
        }
        "INVALID_CURRENCY" -> {
            return ErrorCodes.invalidCurrency
        }
        "INVALID_VERSION" -> {
            return ErrorCodes.invalidVersion
        }
        "MERCHANT_NOT_FOUND" -> {
            return ErrorCodes.merchantNotFound
        }
        "MERCHANT_ORIGIN_ERROR" -> {
            return ErrorCodes.merchantOriginError
        }
        else -> {
            return null
        }
    }
}

public fun errorCodeToString(value: ErrorCodes): String {
    when (value) {
        ErrorCodes.amountLimitExceeded -> {
            return "AMOUNT_LIMIT_EXCEEDED"
        }
        ErrorCodes.amountMismatch -> {
            return "AMOUNT_MISMATCH"
        }
        ErrorCodes.cardNetworkNotSupported -> {
            return "CARD_NETWORK_NOT_SUPPORTED"
        }
        ErrorCodes.cardNotFound -> {
            return "CARD_NOT_FOUND"
        }
        ErrorCodes.codeCheckFailed -> {
            return "CODE_CHECK_FAILED"
        }
        ErrorCodes.gatewayNotFound -> {
            return "GATEWAY_NOT_FOUND"
        }
        ErrorCodes.insecureMerchantOrigin -> {
            return "INSECURE_MERCHANT_ORIGIN"
        }
        ErrorCodes.invalidAmount -> {
            return "INVALID_AMOUNT"
        }
        ErrorCodes.invalidCountry -> {
            return "INVALID_COUNTRY"
        }
        ErrorCodes.invalidCurrency -> {
            return "INVALID_CURRENCY"
        }
        ErrorCodes.invalidVersion -> {
            return "INVALID_VERSION"
        }
        ErrorCodes.merchantNotFound -> {
            return "MERCHANT_NOT_FOUND"
        }
        ErrorCodes.merchantOriginError -> {
            return "MERCHANT_ORIGIN_ERROR"
        }
    }
}

