// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM network/diehard/encrypted-card-response.ts >>>

package com.yandex.xplat.yandex.pay

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*

public open class EncryptedCardResponse(status: String, code: Int, val id: String, val encryptedCard: String): BaseNetworkResponse(status, code) {
    companion object {
        @JvmStatic
        open fun fromJSONItem(json: JSONItem): Result<EncryptedCardResponse> {
            val map = json.castAsMapJSONItem()
            if (map == null) {
                return resultError(YSError("Incorrect format of message: not a map"))
            }
            val id = map!!.getStringOrDefault("id", "")
            val error = undefinedToNull(map!!.`get`("error")?.castAsMapJSONItem())
            if (error != null) {
                val code = error!!.getInt32OrDefault("code", 500)
                val status = error!!.getStringOrDefault("message", "Unknown")
                return resultError(APIError(status, code, null, "EncryptedCard"))
            } else {
                val result = undefinedToNull(map!!.`get`("result")?.castAsMapJSONItem())
                if (result == null) {
                    return resultError(YSError("Incorrect format of successful message: no result"))
                }
                val encryptedCard = result!!.getString("encrypted_card")
                if (encryptedCard == null) {
                    return resultError(YSError("Incorrect format of successful message: no encrypted_card"))
                }
                return resultValue(EncryptedCardResponse("success", 200, id, encryptedCard))
            }
        }

    }
}

