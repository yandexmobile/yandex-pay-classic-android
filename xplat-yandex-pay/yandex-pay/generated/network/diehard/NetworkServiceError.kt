// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM network/diehard/network-service-error.ts >>>

package com.yandex.xplat.yandex.pay

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*

public open class NetworkServiceError(kind: ExternalErrorKind, trigger: ExternalErrorTrigger, statusCode: Int?, message: String): ExternalConvertibleError(kind, trigger, statusCode, null, message) {
    open fun errorWithTrigger(trigger: ExternalErrorTrigger): NetworkServiceError {
        return NetworkServiceError(this.kind, trigger, this.code, this.message)
    }

    companion object {
        @JvmStatic
        open fun transportFailure(error: YSError): NetworkServiceError {
            return NetworkServiceError(ExternalErrorKind.network, ExternalErrorTrigger.internal_sdk, null, "Transport failure: ${error.message}")
        }

        @JvmStatic
        open fun badStatusCode(statusCode: Int, message: String?): NetworkServiceError {
            return NetworkServiceError(ExternalErrorKind.network, ExternalErrorTrigger.internal_sdk, statusCode, "Bad status code: ${statusCode}: ${message}")
        }

        @JvmStatic
        open fun noResponseBody(): NetworkServiceError {
            return NetworkServiceError(ExternalErrorKind.network, ExternalErrorTrigger.internal_sdk, null, "No payload in network response")
        }

        @JvmStatic
        open fun unableToDeserialize(error: YSError): NetworkServiceError {
            return NetworkServiceError(ExternalErrorKind.network, ExternalErrorTrigger.internal_sdk, null, "Unable to deserialize JSON object: ${error.message}")
        }

        @JvmStatic
        open fun unableToParse(item: JSONItem, error: YSError): NetworkServiceError {
            return NetworkServiceError(ExternalErrorKind.network, ExternalErrorTrigger.internal_sdk, null, "Unable to parse JSON object: ${JSONItemGetDebugDescription(item)}, error: ${error.message}")
        }

    }
}

