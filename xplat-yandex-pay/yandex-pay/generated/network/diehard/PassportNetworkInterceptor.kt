// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM network/diehard/passport-network-interceptor.ts >>>

package com.yandex.xplat.yandex.pay

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*

public open class PassportHeaderInterceptor(private val token: String?): NetworkInterceptor {
    open override fun intercept(originalRequest: NetworkRequest): XPromise<NetworkRequest> {
        return resolve(SealedNetworkRequest(originalRequest.method(), originalRequest.targetPath(), originalRequest.params(), originalRequest.urlExtra(), this.updateHeadersExtra(originalRequest.headersExtra()), originalRequest.encoding()))
    }

    private fun updateHeadersExtra(headersExtra: NetworkHeadersExtra): NetworkHeadersExtra {
        if (this.token == null) {
            return headersExtra
        } else {
            return headersExtra.putString("Webauth-Authorization", "OAuth " + this.token).putString("X-OAuth-Token", this.token)
        }
    }

}

