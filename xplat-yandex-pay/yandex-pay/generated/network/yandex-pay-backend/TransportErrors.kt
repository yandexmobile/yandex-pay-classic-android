// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM network/yandex-pay-backend/transport-errors.ts >>>

package com.yandex.xplat.yandex.pay

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*

public enum class TransportErrorCodes {
    noPayload,
    jsonSerializationError,
    dataFormatError,
    badStatusCode,
}
public open class TransportError private constructor(val code: TransportErrorCodes, message: String, val underlyingError: YSError? = null): YSError(message) {
    companion object {
        @JvmStatic
        open fun payloadError(message: String): TransportError {
            return TransportError(TransportErrorCodes.noPayload, message)
        }

        @JvmStatic
        open fun serializationError(message: String, inner: YSError?): TransportError {
            return TransportError(TransportErrorCodes.jsonSerializationError, message, inner)
        }

        @JvmStatic
        open fun dataFormatError(message: String): TransportError {
            return TransportError(TransportErrorCodes.dataFormatError, message)
        }

        @JvmStatic
        open fun badStatusCode(message: String): TransportError {
            return TransportError(TransportErrorCodes.badStatusCode, message)
        }

    }
}

