// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM network/yandex-pay-backend/pay-checkout-response.ts >>>

package com.yandex.xplat.yandex.pay

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*

public open class PayCheckoutResponse(status: String, code: Int, val paymentToken: String, val paymentMethodType: PaymentMethodTypes, val paymentMethodCardLastDigits: String?, val paymentCardNetwork: CardNetworks?): BaseNetworkResponse(status, code) {
    companion object {
        @JvmStatic
        open fun fromJSONItem(json: JSONItem): Result<PayCheckoutResponse> {
            return BaseNetworkResponse.fromJSON(json, "Checkout").flatMap( {
                baseResponse ->
                decodeJSONItem(json, __LBL__PayCheckoutResponse_1@ {
                    item ->
                    val map = item.tryCastAsMapJSONItem()
                    val data = map.tryGet("data").tryCastAsMapJSONItem()
                    val token = data.tryGetString("payment_token")
                    val paymentMethod = data.tryGet("payment_method_info").tryCastAsMapJSONItem()
                    val typeString = paymentMethod.tryGetString("type")
                    val type = paymentMethodTypeFromString(typeString)!!
                    val lastDigits = paymentMethod.getString("card_last4")
                    val networkString = paymentMethod.getString("card_network")
                    val cardNetwork = if (networkString != null) cardNetworkFromString(networkString!!) else null
                    return@__LBL__PayCheckoutResponse_1 PayCheckoutResponse(baseResponse.status, baseResponse.code, token, type, lastDigits, cardNetwork)
                })
            })
        }

    }
}

