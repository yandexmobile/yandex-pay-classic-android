// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM busilogics/card-binding-service-error.ts >>>

package com.yandex.xplat.yandex.pay

import com.yandex.xplat.common.*
import com.yandex.xplat.eventus.common.*

public enum class CardBindingServiceErrorCode {
    emptyOAuthToken,
    undefinedStatus,
    challengeInvalidRedirectUrl,
    challengeHandlingError,
    cancelled,
}
public open class CardBindingServiceError(message: String, val code: CardBindingServiceErrorCode): YSError(message) {
    companion object {
        @JvmStatic
        open fun emptyOAuthToken(): CardBindingServiceError {
            return CardBindingServiceError("Unable to bind a new card: OAuth token is empty.", CardBindingServiceErrorCode.emptyOAuthToken)
        }

        @JvmStatic
        open fun cancelled(): CardBindingServiceError {
            return CardBindingServiceError("Card binding operation cancelled", CardBindingServiceErrorCode.cancelled)
        }

        @JvmStatic
        open fun undefinedStatus(response: CheckBindingPaymentResponse): CardBindingServiceError {
            return CardBindingServiceError("Undefined binding payment status: ${CardBindingServiceError.responseDescription(response)}", CardBindingServiceErrorCode.undefinedStatus)
        }

        @JvmStatic
        open fun challengeInvalidRedirectUrl(response: CheckBindingPaymentResponse): CardBindingServiceError {
            return CardBindingServiceError("Invalid redirectUrl \"${response.redirectUrl}\" in response: ${CardBindingServiceError.responseDescription(response)}", CardBindingServiceErrorCode.challengeInvalidRedirectUrl)
        }

        @JvmStatic
        open fun challengeHandlingError(response: CheckBindingPaymentResponse, error: Any): CardBindingServiceError {
            val errorMsg = if (error is YSError) (error as YSError).message else "${error}"
            return CardBindingServiceError("Failed to handle 3ds challenge for response: ${CardBindingServiceError.responseDescription(response)}, error: \"${errorMsg}\"", CardBindingServiceErrorCode.challengeHandlingError)
        }

        @JvmStatic
        private fun responseDescription(response: DiehardResponse): String {
            return "<DiehardResponse: status - ${response.status}, desc - ${response.statusDescription ?: "null"}>"
        }

    }
}

